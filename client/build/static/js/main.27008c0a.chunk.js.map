{"version":3,"sources":["utils/helpers.js","utils/actions.js","utils/reducers.js","utils/GlobalState.js","components/ProductItem/index.js","utils/queries.js","assets/spinner.gif","components/ProductList/index.js","components/CategoryMenu/index.js","components/CartItem/index.js","utils/auth.js","components/Cart/index.js","pages/Home.js","pages/Detail.js","components/Jumbotron/index.js","pages/NoMatch.js","utils/mutations.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","pages/Success.js","pages/OrderHistory.js","App.js","serviceWorker.js","index.js"],"names":["pluralize","name","count","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","_id","oncomplete","close","UPDATE_PRODUCTS","ADD_TO_CART","ADD_MULTIPLE_TO_CART","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","TOGGLE_CART","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","firstState","products","cart","cartOpen","categories","currentCategory","reducer","state","arguments","length","undefined","action","type","_objectSpread","_toConsumableArray","concat","product","map","purchaseQuantity","newState","filter","StoreContext","createContext","Provider","StoreProvider","_ref","value","initialState","props","_objectWithoutProperties","_excluded","_useProductReducer","useReducer","_useProductReducer2","_slicedToArray","dispatch","_jsx","useStoreContext","useContext","ProductItem","item","_useStoreContext","_useStoreContext2","image","price","quantity","_jsxs","className","children","Link","to","alt","src","onClick","itemInCart","find","cartItem","parseInt","QUERY_PRODUCTS","gql","_templateObject","_taggedTemplateLiteral","QUERY_CHECKOUT","_templateObject2","QUERY_CATEGORIES","_templateObject3","_templateObject4","QUERY_USER","_templateObject5","ProductList","useSelector","useDispatch","_useQuery","useQuery","loading","data","useEffect","forEach","then","category","spinner","CategoryMenu","categoryData","id","CartItem","placeholder","onChange","target","role","removeFromCart","AuthService","_classCallCheck","_createClass","key","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","location","assign","removeItem","stripePromise","loadStripe","Cart","_useLazyQuery","useLazyQuery","_useLazyQuery2","getCheckout","toggleCart","res","redirectToCheckout","sessionId","checkout","session","_getCart","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","sent","stop","apply","getCart","sum","toFixed","calculateTotal","Auth","loggedIn","productIds","i","push","variables","Home","Detail","useParams","_useState","useState","_useState2","currentProduct","setCurrentProduct","indexedProducts","_Fragment","description","disabled","p","Jumbotron","style","height","clear","paddingTop","textAlign","NoMatch","LOGIN","ADD_ORDER","ADD_USER","Login","email","password","formState","setFormState","_useMutation","useMutation","_useMutation2","login","error","handleFormSubmit","event","mutationResponse","preventDefault","t0","_x","handleChange","_event$target","_defineProperty","onSubmit","htmlFor","Signup","addUser","firstName","lastName","Nav","href","logout","Success","addOrder","_saveOrder","_yield$addOrder","setTimeout","saveOrder","OrderHistory","user","orders","order","purchaseDate","toLocaleDateString","index","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","cache","InMemoryCache","App","ApolloProvider","Router","Routes","Route","path","element","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","React","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.27008c0a.chunk.js","sourcesContent":["export function pluralize(name, count) {\n  if (count === 1) {\n    return name;\n  }\n  return name + 's';\n}\n\nexport function idbPromise(storeName, method, object) {\n  return new Promise((resolve, reject) => {\n    const request = window.indexedDB.open('shop-shop', 1);\n    let db, tx, store;\n    request.onupgradeneeded = function(e) {\n      const db = request.result;\n      db.createObjectStore('products', { keyPath: '_id' });\n      db.createObjectStore('categories', { keyPath: '_id' });\n      db.createObjectStore('cart', { keyPath: '_id' });\n    };\n\n    request.onerror = function(e) {\n      console.log('There was an error');\n    };\n\n    request.onsuccess = function(e) {\n      db = request.result;\n      tx = db.transaction(storeName, 'readwrite');\n      store = tx.objectStore(storeName);\n\n      db.onerror = function(e) {\n        console.log('error', e);\n      };\n\n      switch (method) {\n        case 'put':\n          store.put(object);\n          resolve(object);\n          break;\n        case 'get':\n          const all = store.getAll();\n          all.onsuccess = function() {\n            resolve(all.result);\n          };\n          break;\n        case 'delete':\n          store.delete(object._id);\n          break;\n        default:\n          console.log('No valid method');\n          break;\n      }\n\n      tx.oncomplete = function() {\n        db.close();\n      };\n    };\n  });\n}\n","export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\n\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const CLEAR_CART = \"CLEAR_CART\";\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\nexport const TOGGLE_CART = \"TOGGLE_CART\";\n\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\n","import { useReducer } from 'react';\nimport {\n  UPDATE_PRODUCTS,\n  ADD_TO_CART,\n  UPDATE_CART_QUANTITY,\n  REMOVE_FROM_CART,\n  ADD_MULTIPLE_TO_CART,\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n  CLEAR_CART,\n  TOGGLE_CART,\n} from './actions';\n\nconst firstState = {\n  products: [],\n  cart: [],\n  cartOpen: false,\n  categories: [],\n  currentCategory: '',\n}\n\n// TODO: To get a better understand of how a reducer works - add comments to the various actions in the reducer\nexport const reducer = (state = firstState, action) => {\n  switch (action.type) {\n    // TODO: Add a comment describing the functionality of the UPDATE_PRODUCTS case\n    // Your comment here\n    case UPDATE_PRODUCTS:\n      return {\n        ...state,\n        products: [...action.products],\n      };\n\n    case ADD_TO_CART:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.product],\n      };\n\n    case ADD_MULTIPLE_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, ...action.products],\n      };\n    // TODO: Add a comment describing the functionality of the UPDATE_CART_QUANTITY case\n    // Your comment here\n    case UPDATE_CART_QUANTITY:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: state.cart.map((product) => {\n          if (action._id === product._id) {\n            product.purchaseQuantity = action.purchaseQuantity;\n          }\n          return product;\n        }),\n      };\n\n    // TODO: Add a comment describing the functionality of the REMOVE_FROM_CART case\n    // Your comment here\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter((product) => {\n        return product._id !== action._id;\n      });\n\n      return {\n        ...state,\n        cartOpen: newState.length > 0,\n        cart: newState,\n      };\n\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartOpen: false,\n        cart: [],\n      };\n\n    case TOGGLE_CART:\n      return {\n        ...state,\n        cartOpen: !state.cartOpen,\n      };\n\n    case UPDATE_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.categories],\n      };\n\n    case UPDATE_CURRENT_CATEGORY:\n      return {\n        ...state,\n        currentCategory: action.currentCategory,\n      };\n\n    // TODO: Add a comment describing what the default case is for\n    // Your comment here\n    default:\n      return state;\n  }\n};\n\nexport function useProductReducer(initialState) {\n  return useReducer(reducer, initialState);\n}\n","import React, { createContext, useContext } from \"react\";\nimport { useProductReducer } from './reducers'\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\nconst StoreProvider = ({ value = [], ...props }) => {\n  const [state, dispatch] = useProductReducer({\n    products: [],\n    cart: [],\n    cartOpen: false,\n    categories: [],\n    currentCategory: '',\n  });\n\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { pluralize } from \"../../utils/helpers\"\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nfunction ProductItem(item) {\n  const [state, dispatch] = useStoreContext();\n\n  const {\n    image,\n    name,\n    _id,\n    price,\n    quantity\n  } = item;\n\n  const { cart } = state\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id)\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...item, purchaseQuantity: 1 }\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\n    }\n  }\n\n  return (\n    <div className=\"card px-1 py-1\">\n      <Link to={`/products/${_id}`}>\n        <img\n          alt={name}\n          src={`/images/${image}`}\n        />\n        <p>{name}</p>\n      </Link>\n      <div>\n        <div>{quantity} {pluralize(\"item\", quantity)} in stock</div>\n        <span>${price}</span>\n      </div>\n      <button onClick={addToCart}>Add to cart</button>\n    </div>\n  );\n}\n\nexport default ProductItem;\n","import { gql } from '@apollo/client';\n\nexport const QUERY_PRODUCTS = gql`\n  query getProducts($category: ID) {\n    products(category: $category) {\n      _id\n      name\n      description\n      price\n      quantity\n      image\n      category {\n        _id\n      }\n    }\n  }\n`;\n\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($products: [ID]!) {\n    checkout(products: $products) {\n      session\n    }\n  }\n`;\n\nexport const QUERY_ALL_PRODUCTS = gql`\n  {\n    products {\n      _id\n      name\n      description\n      price\n      quantity\n      category {\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n  {\n    categories {\n      _id\n      name\n    }\n  }\n`;\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      firstName\n      lastName\n      orders {\n        _id\n        purchaseDate\n        products {\n          _id\n          name\n          description\n          price\n          quantity\n          image\n        }\n      }\n    }\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/spinner.7e729fec.gif\";","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'; // Import useSelector and useDispatch from 'react-redux'\nimport ProductItem from '../ProductItem';\nimport { UPDATE_PRODUCTS } from '../../utils/actions';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_PRODUCTS } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport spinner from '../../assets/spinner.gif';\n\nfunction ProductList() {\n  const state = useSelector((state) => {\n    return state;\n  });\n  const dispatch = useDispatch();\n\n  const { currentCategory } = state;\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    } else if (!loading) {\n      idbPromise('products', 'get').then((products) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products,\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterProducts() {\n    if (!currentCategory) {\n      return state.products;\n    }\n\n    return state.products.filter(\n      (product) => product.category._id === currentCategory\n    );\n  }\n\n  return (\n    <div className=\"my-2\">\n      <h2>Our Products:</h2>\n      {state.products.length ? (\n        <div className=\"flex-row\">\n          {filterProducts().map((product) => (\n            <ProductItem\n              key={product._id}\n              _id={product._id}\n              image={product.image}\n              name={product.name}\n              price={product.price}\n              quantity={product.quantity}\n            />\n          ))}\n        </div>\n      ) : (\n        <h3>You haven't added any products yet!</h3>\n      )}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n    </div>\n  );\n}\n\nexport default ProductList;","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n} from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\n\nfunction CategoryMenu() {\n  const state = useSelector((state) => {\n    return state;\n  });\n\n  const dispatch = useDispatch();\n\n  const { categories } = state;\n\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories,\n      });\n      categoryData.categories.forEach((category) => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then((categories) => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories,\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = (id) => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id,\n    });\n  };\n\n  return (\n    <div>\n      <h2>Choose a Category:</h2>\n      {categories.map((item) => (\n        <button\n          key={item._id}\n          onClick={() => {\n            handleClick(item._id);\n          }}\n        >\n          {item.name}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default CategoryMenu;\n","import React from 'react';\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nconst CartItem = ({ item }) => {\n\n  const [, dispatch] = useStoreContext();\n\n  const removeFromCart = item => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: item._id\n    });\n    idbPromise('cart', 'delete', { ...item });\n\n  };\n\n  const onChange = (e) => {\n    const value = e.target.value;\n    if (value === '0') {\n      dispatch({\n        type: REMOVE_FROM_CART,\n        _id: item._id\n      });\n      idbPromise('cart', 'delete', { ...item });\n\n    } else {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: item._id,\n        purchaseQuantity: parseInt(value)\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\n\n    }\n  }\n\n  return (\n    <div className=\"flex-row\">\n      <div>\n        <img\n          src={`/images/${item.image}`}\n          alt=\"\"\n        />\n      </div>\n      <div>\n        <div>{item.name}, ${item.price}</div>\n        <div>\n          <span>Qty:</span>\n          <input\n            type=\"number\"\n            placeholder=\"1\"\n            value={item.purchaseQuantity}\n            onChange={onChange}\n          />\n          <span\n            role=\"img\"\n            aria-label=\"trash\"\n            onClick={() => removeFromCart(item)}\n          >\n            🗑️\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CartItem;\n","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useEffect } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useLazyQuery } from '@apollo/client';\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport CartItem from '../CartItem';\nimport Auth from '../../utils/auth';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\nimport './style.css';\n\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst Cart = () => {\n  const [state, dispatch] = useStoreContext();\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n\n  useEffect(() => {\n    if (data) {\n      stripePromise.then((res) => {\n        res.redirectToCheckout({ sessionId: data.checkout.session });\n      });\n    }\n  }, [data]);\n\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise('cart', 'get');\n      dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\n    }\n\n    if (!state.cart.length) {\n      getCart();\n    }\n  }, [state.cart.length, dispatch]);\n\n  function toggleCart() {\n    dispatch({ type: TOGGLE_CART });\n  }\n\n  function calculateTotal() {\n    let sum = 0;\n    state.cart.forEach((item) => {\n      sum += item.price * item.purchaseQuantity;\n    });\n    return sum.toFixed(2);\n  }\n\n  function submitCheckout() {\n    const productIds = [];\n\n    state.cart.forEach((item) => {\n      for (let i = 0; i < item.purchaseQuantity; i++) {\n        productIds.push(item._id);\n      }\n    });\n\n    getCheckout({\n      variables: { products: productIds },\n    });\n  }\n\n  if (!state.cartOpen) {\n    return (\n      <div className=\"cart-closed\" onClick={toggleCart}>\n        <span role=\"img\" aria-label=\"trash\">\n          🛒\n        </span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"cart\">\n      <div className=\"close\" onClick={toggleCart}>\n        [close]\n      </div>\n      <h2>Shopping Cart</h2>\n      {state.cart.length ? (\n        <div>\n          {state.cart.map((item) => (\n            <CartItem key={item._id} item={item} />\n          ))}\n\n          <div className=\"flex-row space-between\">\n            <strong>Total: ${calculateTotal()}</strong>\n\n            {Auth.loggedIn() ? (\n              <button onClick={submitCheckout}>Checkout</button>\n            ) : (\n              <span>(log in to check out)</span>\n            )}\n          </div>\n        </div>\n      ) : (\n        <h3>\n          <span role=\"img\" aria-label=\"shocked\">\n            😱\n          </span>\n          You haven't added anything to your cart yet!\n        </h3>\n      )}\n    </div>\n  );\n};\n\nexport default Cart;\n","import React from \"react\";\nimport ProductList from \"../components/ProductList\";\nimport CategoryMenu from \"../components/CategoryMenu\";\nimport Cart from \"../components/Cart\";\n\nconst Home = () => {\n  return (\n    <div className=\"container\">\n      <CategoryMenu />\n      <ProductList />\n      <Cart />\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport Cart from '../components/Cart';\nimport { useStoreContext } from '../utils/GlobalState';\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_PRODUCTS,\n} from '../utils/actions';\nimport { QUERY_PRODUCTS } from '../utils/queries';\nimport { idbPromise } from '../utils/helpers';\nimport spinner from '../assets/spinner.gif';\n\nfunction Detail() {\n  const [state, dispatch] = useStoreContext();\n  const { id } = useParams();\n\n  const [currentProduct, setCurrentProduct] = useState({});\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  const { products, cart } = state;\n\n  useEffect(() => {\n    // already in global store\n    if (products.length) {\n      setCurrentProduct(products.find((product) => product._id === id));\n    }\n    // retrieved from server\n    else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    }\n    // get cache from idb\n    else if (!loading) {\n      idbPromise('products', 'get').then((indexedProducts) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts,\n        });\n      });\n    }\n  }, [products, data, loading, dispatch, id]);\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct, purchaseQuantity: 1 },\n      });\n      idbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\n    }\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id,\n    });\n\n    idbPromise('cart', 'delete', { ...currentProduct });\n  };\n\n  return (\n    <>\n      {currentProduct && cart ? (\n        <div className=\"container my-1\">\n          <Link to=\"/\">← Back to Products</Link>\n\n          <h2>{currentProduct.name}</h2>\n\n          <p>{currentProduct.description}</p>\n\n          <p>\n            <strong>Price:</strong>${currentProduct.price}{' '}\n            <button onClick={addToCart}>Add to Cart</button>\n            <button\n              disabled={!cart.find((p) => p._id === currentProduct._id)}\n              onClick={removeFromCart}\n            >\n              Remove from Cart\n            </button>\n          </p>\n\n          <img\n            src={`/images/${currentProduct.image}`}\n            alt={currentProduct.name}\n          />\n        </div>\n      ) : null}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n      <Cart />\n    </>\n  );\n}\n\nexport default Detail;\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($products: [ID]!) {\n    addOrder(products: $products) {\n      purchaseDate\n      products {\n        _id\n        name\n        description\n        price\n        quantity\n        category {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/signup\">← Go to Signup</Link>\n\n      <h2>Login</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email address:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {error ? (\n          <div>\n            <p className=\"error-text\">The provided credentials are incorrect</p>\n          </div>\n        ) : null}\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/login\">← Go to Login</Link>\n\n      <h2>Signup</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            placeholder=\"First\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input\n            placeholder=\"Last\"\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\n\nfunction Nav() {\n\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/orderHistory\">\n              Order History\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n            <a href=\"/\" onClick={() => Auth.logout()}>\n              Logout\n            </a>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/signup\">\n              Signup\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      );\n    }\n  }\n\n  return (\n    <header className=\"flex-row px-1\">\n      <h1>\n        <Link to=\"/\">\n          <span role=\"img\" aria-label=\"shopping bag\">🛍️</span>\n          -Shop-Shop\n        </Link>\n      </h1>\n\n      <nav>\n        {showNavigation()}\n      </nav>\n    </header>\n  );\n}\n\nexport default Nav;\n","import React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport Jumbotron from '../components/Jumbotron';\nimport { ADD_ORDER } from '../utils/mutations';\nimport { idbPromise } from '../utils/helpers';\n\nfunction Success() {\n  const [addOrder] = useMutation(ADD_ORDER);\n\n  useEffect(() => {\n    async function saveOrder() {\n      const cart = await idbPromise('cart', 'get');\n      const products = cart.map((item) => item._id);\n\n      if (products.length) {\n        const { data } = await addOrder({ variables: { products } });\n        const productData = data.addOrder.products;\n\n        productData.forEach((item) => {\n          idbPromise('cart', 'delete', item);\n        });\n      }\n\n      setTimeout(() => {\n        window.location.assign('/');\n      }, 3000);\n    }\n\n    saveOrder();\n  }, [addOrder]);\n\n  return (\n    <div>\n      <Jumbotron>\n        <h1>Success!</h1>\n        <h2>Thank you for your purchase!</h2>\n        <h2>You will now be redirected to the home page</h2>\n      </Jumbotron>\n    </div>\n  );\n}\n\nexport default Success;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER } from '../utils/queries';\n\nfunction OrderHistory() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div className=\"container my-1\">\n        <Link to=\"/\">← Back to Products</Link>\n\n        {user ? (\n          <>\n            <h2>\n              Order History for {user.firstName} {user.lastName}\n            </h2>\n            {user.orders.map((order) => (\n              <div key={order._id} className=\"my-2\">\n                <h3>\n                  {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\n                </h3>\n                <div className=\"flex-row\">\n                  {order.products.map(({ _id, image, name, price }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`/products/${_id}`}>\n                        <img alt={name} src={`/images/${image}`} />\n                        <p>{name}</p>\n                      </Link>\n                      <div>\n                        <span>${price}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nexport default OrderHistory;\n","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nimport Home from './pages/Home';\nimport Detail from './pages/Detail';\nimport NoMatch from './pages/NoMatch';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Nav from './components/Nav';\nimport { StoreProvider } from './utils/GlobalState';\nimport Success from './pages/Success';\nimport OrderHistory from './pages/OrderHistory';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <StoreProvider>\n            <Nav />\n            <Routes>\n              <Route \n                path=\"/\" \n                element={<Home />} \n              />\n              <Route \n                path=\"/login\" \n                element={<Login />} \n              />\n              <Route \n                path=\"/signup\" \n                element={<Signup />} \n              />\n              <Route \n                path=\"/success\" \n                element={<Success />} \n              />\n              <Route \n                path=\"/orderHistory\" \n                element={<OrderHistory />} \n              />\n              <Route \n                path=\"/products/:id\" \n                element={<Detail />} \n              />\n              <Route \n                path=\"*\" \n                element={<NoMatch />} \n              />\n            </Routes>\n          </StoreProvider>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}